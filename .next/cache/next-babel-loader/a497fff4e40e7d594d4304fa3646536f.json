{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nconst IndexPage = compose()(Page);\n\nIndexPage.getInitialProps = async ({\n  store,\n  req\n}) => {\n  const isServer = !!req;\n  const {\n    todo\n  } = store.getState(); // we can add any custom data here\n  // for examle, the data from api server\n\n  const response = await fetch('http://localhost:8000/data');\n  let data = response.json();\n  console.log(data);\n  store.dispatch(addTodo(_Object$assign(todo.item, {\n    value: 'Hello World'\n  })));\n  return {\n    isServer\n  };\n};\n\nexport default connect()(IndexPage);","map":{"version":3,"sources":["/home/jirayu/project/js/test-app/pages/index.tsx"],"names":["compose","connect","Page","addTodo","IndexPage","getInitialProps","store","req","isServer","todo","getState","response","fetch","data","json","console","log","dispatch","item","value"],"mappings":";AAIA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAOA,MAAMC,SAA8C,GAAGJ,OAAO,GAAGE,IAAH,CAA9D;;AAEAE,SAAS,CAACC,eAAV,GAA4B,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AACpD,QAAMC,QAAiB,GAAG,CAAC,CAACD,GAA5B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWH,KAAK,CAACI,QAAN,EAAjB,CAFoD,CAIpD;AACA;;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B;AACA,MAAIC,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,EAAAA,KAAK,CAACW,QAAN,CAAed,OAAO,CAAC,eAAcM,IAAI,CAACS,IAAnB,EAAyB;AAC9CC,IAAAA,KAAK,EAAE;AADuC,GAAzB,CAAD,CAAtB;AAIA,SAAO;AACLX,IAAAA;AADK,GAAP;AAGD,CAhBD;;AAkBA,eAAeP,OAAO,GAAGG,SAAH,CAAtB","sourcesContent":["import {\n  NextPageContext,\n  NextComponentType,\n} from 'next';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nimport { Store } from '../store';\n\ninterface IndexPageContext extends NextPageContext {\n  store: Store;\n}\n\nconst IndexPage: NextComponentType<IndexPageContext> = compose()(Page);\n\nIndexPage.getInitialProps = async ({ store, req }) => {\n  const isServer: boolean = !!req;\n  const { todo } = store.getState();\n  \n  // we can add any custom data here\n  // for examle, the data from api server\n  const response = await fetch('http://localhost:8000/data');\n  let data = response.json()\n  console.log(data)\n  store.dispatch(addTodo(Object.assign(todo.item, {\n    value: 'Hello World',\n  })));\n\n  return {\n    isServer,\n  };\n}\n\nexport default connect()(IndexPage);\n"]},"metadata":{},"sourceType":"module"}