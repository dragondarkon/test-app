{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nimport fetch from 'isomorphic-unfetch';\nconst IndexPage = compose()(Page);\n\nIndexPage.getInitialProps = async ({\n  store,\n  req\n}) => {\n  const isServer = !!req;\n  const {\n    todo\n  } = store.getState();\n  const res = await fetch('http://localhost:8000/data');\n  const datas = await res.json(); // we can add any custom data here\n  // for examle, the data from api server\n\n  datas.map(data => {\n    store.dispatch(addTodo(_Object$assign(todo, {\n      value: data.text\n    })));\n  });\n  store.dispatch(addTodo(_Object$assign(todo, {\n    value: 'Hello World'\n  })));\n  return {\n    isServer\n  };\n};\n\nexport default connect()(IndexPage);","map":{"version":3,"sources":["/home/jirayu/project/js/test-app/pages/index.tsx"],"names":["compose","connect","Page","addTodo","fetch","IndexPage","getInitialProps","store","req","isServer","todo","getState","res","datas","json","map","data","dispatch","value","text"],"mappings":";AAIA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAMA,MAAMC,SAA8C,GAAGL,OAAO,GAAGE,IAAH,CAA9D;;AAEAG,SAAS,CAACC,eAAV,GAA4B,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AACpD,QAAMC,QAAiB,GAAG,CAAC,CAACD,GAA5B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWH,KAAK,CAACI,QAAN,EAAjB;AACA,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,4BAAD,CAAvB;AACA,QAAMS,KAAK,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAApB,CAJoD,CAMpD;AACA;;AAEAD,EAAAA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAW;AACnBT,IAAAA,KAAK,CAACU,QAAN,CAAed,OAAO,CAAC,eAAcO,IAAd,EAAoB;AACzCQ,MAAAA,KAAK,EAAEF,IAAI,CAACG;AAD6B,KAApB,CAAD,CAAtB;AAGD,GAJD;AAMAZ,EAAAA,KAAK,CAACU,QAAN,CAAed,OAAO,CAAC,eAAcO,IAAd,EAAoB;AACzCQ,IAAAA,KAAK,EAAE;AADkC,GAApB,CAAD,CAAtB;AAIA,SAAO;AACLT,IAAAA;AADK,GAAP;AAGD,CAtBD;;AAwBA,eAAeR,OAAO,GAAGI,SAAH,CAAtB","sourcesContent":["import {\n  NextPageContext,\n  NextComponentType,\n} from 'next';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nimport { Store } from '../store';\nimport fetch from 'isomorphic-unfetch';\n\ninterface IndexPageContext extends NextPageContext {\n  store: Store;\n}\n\nconst IndexPage: NextComponentType<IndexPageContext> = compose()(Page);\n\nIndexPage.getInitialProps = async ({ store, req }) => {\n  const isServer: boolean = !!req;\n  const { todo } = store.getState();\n  const res = await fetch('http://localhost:8000/data');\n  const datas = await res.json();\n\n  // we can add any custom data here\n  // for examle, the data from api server\n\n  datas.map((data) =>  {\n    store.dispatch(addTodo(Object.assign(todo, {\n      value: data.text,\n    })));\n  })\n  \n  store.dispatch(addTodo(Object.assign(todo, {\n    value: 'Hello World',\n  })));\n\n  return {\n    isServer,\n  };\n}\n\nexport default connect()(IndexPage);\n"]},"metadata":{},"sourceType":"module"}