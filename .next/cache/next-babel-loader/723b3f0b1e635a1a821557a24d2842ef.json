{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nimport fetch from 'isomorphic-unfetch';\nconst IndexPage = compose()(Page);\n\nIndexPage.getInitialProps = async ({\n  store,\n  req\n}) => {\n  const isServer = !!req;\n  const {\n    todo\n  } = store.getState(); // we can add any custom data here\n  // for examle, the data from api server\n\n  const res = await fetch('http://localhost:8000/data');\n  const datas = await res.json();\n  console.log(`Show data fetched. Count: ${datas.length}`);\n  let result = datas.map(data => {\n    return data.text;\n  });\n  console.log(result);\n  store.dispatch(addTodo(_Object$assign(todo.item, {\n    value: 'Hello World'\n  })));\n  return {\n    isServer,\n    result\n  };\n};\n\nexport default connect()(IndexPage);","map":{"version":3,"sources":["/home/jirayu/project/js/test-app/pages/index.tsx"],"names":["compose","connect","Page","addTodo","fetch","IndexPage","getInitialProps","store","req","isServer","todo","getState","res","datas","json","console","log","length","result","map","data","text","dispatch","item","value"],"mappings":";AAIA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAMA,MAAMC,SAA8C,GAAGL,OAAO,GAAGE,IAAH,CAA9D;;AAEAG,SAAS,CAACC,eAAV,GAA4B,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AACpD,QAAMC,QAAiB,GAAG,CAAC,CAACD,GAA5B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWH,KAAK,CAACI,QAAN,EAAjB,CAFoD,CAIpD;AACA;;AACA,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,4BAAD,CAAvB;AACA,QAAMS,KAAK,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,KAAK,CAACI,MAAO,EAAtD;AACA,MAAIC,MAAM,GAAGL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AAC/B,WAAOA,IAAI,CAACC,IAAZ;AACD,GAFY,CAAb;AAGAN,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AAEAX,EAAAA,KAAK,CAACe,QAAN,CAAenB,OAAO,CAAC,eAAcO,IAAI,CAACa,IAAnB,EAAyB;AAC9CC,IAAAA,KAAK,EAAE;AADuC,GAAzB,CAAD,CAAtB;AAIA,SAAO;AACLf,IAAAA,QADK;AAELS,IAAAA;AAFK,GAAP;AAID,CAtBD;;AAwBA,eAAejB,OAAO,GAAGI,SAAH,CAAtB","sourcesContent":["import {\n  NextPageContext,\n  NextComponentType,\n} from 'next';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nimport { Store } from '../store';\nimport fetch from 'isomorphic-unfetch';\n\ninterface IndexPageContext extends NextPageContext {\n  store: Store;\n}\n\nconst IndexPage: NextComponentType<IndexPageContext> = compose()(Page);\n\nIndexPage.getInitialProps = async ({ store, req }) => {\n  const isServer: boolean = !!req;\n  const { todo } = store.getState();\n\n  // we can add any custom data here\n  // for examle, the data from api server\n  const res = await fetch('http://localhost:8000/data');\n  const datas = await res.json();\n  console.log(`Show data fetched. Count: ${datas.length}`);\n  let result = datas.map((data) => {\n    return data.text\n  })\n  console.log(result);\n\n  store.dispatch(addTodo(Object.assign(todo.item, {\n    value: 'Hello World',\n  })));\n\n  return {\n    isServer,\n    result,\n  };\n}\n\nexport default connect()(IndexPage);\n"]},"metadata":{},"sourceType":"module"}