{"ast":null,"code":"import { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nconst IndexPage = compose()(Page); // IndexPage.getInitialProps = async ({ store, req }) => {\n//   const isServer: boolean = !!req;\n//   const { todo } = store.getState();\n//   // we can add any custom data here\n//   // for examle, the data from api server\n//   // const response = await fetch('http://localhost:8000/data');\n//   // let data = response.json()\n//   // console.log(data)\n//   store.dispatch(addTodo(Object.assign(todo.item, {\n//     value: 'Hello World',\n//   })));\n//   return {\n//     isServer,\n//   };\n// }\n\nIndexPage.getInitialProps = async ({\n  store,\n  req\n}) => {\n  const isServer = !!req;\n  const {\n    todo\n  } = store.getState();\n  let data;\n\n  if (isServer) {\n    // in the NEXT.js server side, we can pass the server data\n    // this `query.articles` is passed from AppController\n    data = store.getState();\n  } else {\n    // in the NEXT.js client side, we need to fetch the same data above\n    const response = await fetch('http://localhost:8000/data');\n    data = await response.json();\n    console.log(data);\n  }\n\n  return {\n    isServer\n  };\n};\n\nexport default connect()(IndexPage);","map":{"version":3,"sources":["/home/jirayu/project/js/test-app/pages/index.tsx"],"names":["compose","connect","Page","IndexPage","getInitialProps","store","req","isServer","todo","getState","data","response","fetch","json","console","log"],"mappings":"AAIA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAQA,MAAMC,SAA8C,GAAGH,OAAO,GAAGE,IAAH,CAA9D,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAC,SAAS,CAACC,eAAV,GAA4B,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0B;AACpD,QAAMC,QAAiB,GAAG,CAAC,CAACD,GAA5B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWH,KAAK,CAACI,QAAN,EAAjB;AACA,MAAIC,IAAJ;;AAEA,MAAIH,QAAJ,EAAc;AACZ;AACA;AACAG,IAAAA,IAAI,GAAGL,KAAK,CAACI,QAAN,EAAP;AACD,GAJD,MAIO;AACL;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B;AACAF,IAAAA,IAAI,GAAG,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD;;AAED,SAAO;AACLH,IAAAA;AADK,GAAP;AAGD,CAnBD;;AAqBA,eAAeN,OAAO,GAAGE,SAAH,CAAtB","sourcesContent":["import {\n  NextPageContext,\n  NextComponentType,\n} from 'next';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport Page from '../containers/page';\nimport { addTodo } from '../actions';\nimport { Store } from '../store';\n\ninterface IndexPageContext extends NextPageContext {\n  store: Store;\n}\n\nconst IndexPage: NextComponentType<IndexPageContext> = compose()(Page);\n\n// IndexPage.getInitialProps = async ({ store, req }) => {\n//   const isServer: boolean = !!req;\n//   const { todo } = store.getState();\n  \n//   // we can add any custom data here\n//   // for examle, the data from api server\n//   // const response = await fetch('http://localhost:8000/data');\n//   // let data = response.json()\n//   // console.log(data)\n//   store.dispatch(addTodo(Object.assign(todo.item, {\n//     value: 'Hello World',\n//   })));\n\n//   return {\n//     isServer,\n//   };\n// }\n\nIndexPage.getInitialProps = async ({ store, req }) => {\n  const isServer: boolean = !!req;\n  const { todo } = store.getState();\n  let data;\n\n  if (isServer) {\n    // in the NEXT.js server side, we can pass the server data\n    // this `query.articles` is passed from AppController\n    data = store.getState();\n  } else {\n    // in the NEXT.js client side, we need to fetch the same data above\n    const response = await fetch('http://localhost:8000/data');\n    data = await response.json();\n    console.log(data)\n  }\n\n  return {\n    isServer,\n  };\n}\n\nexport default connect()(IndexPage);\n"]},"metadata":{},"sourceType":"module"}